name: Sync new commits to feature/new-updates

on:
  schedule:
    - cron: '0 2 * * *' # –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 2:00
  workflow_dispatch:     # —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

jobs:
  sync:
    runs-on: [self-hosted, linux, corporate-runner]

    container:
      image: ubuntu:latest

    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y git curl

      - name: Checkout corporate repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0   # –ø–æ–ª–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω—É–∂–µ–Ω –¥–ª—è cherry-pick

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/rosetta-models/blank-base-model.git || true
          git fetch upstream

- name: Cherry-pick new commits from upstream
  run: |
    git checkout feature/new-updates

    # –°–ø–∏—Å–æ–∫ –∫–æ–º–º–∏—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å (—É–¥–∞–ª—ë–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é)
    SKIPPED_COMMITS=("abc123" "def456")  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ —Ö—ç—à–∏

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö –∫–æ–º–º–∏—Ç–æ–≤ –ø–æ—Å–ª–µ –Ω–∞—à–µ–π –≤–µ—Ç–∫–∏
    NEW_COMMITS=$(git log --reverse --format="%H" feature/new-updates..upstream/main)

    if [ -z "$NEW_COMMITS" ]; then
      echo "No new commits to sync"
      exit 0
    fi

    # –û—Ç–∫–ª—é—á–∞–µ–º –ø–∞–¥–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    set +e

    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É –Ω–æ–≤–æ–º—É –∫–æ–º–º–∏—Ç—É
    for COMMIT in $NEW_COMMITS; do
      if [[ " ${SKIPPED_COMMITS[@]} " =~ " ${COMMIT} " ]]; then
        echo "Skipping commit $COMMIT (blacklisted)"
        continue
      fi

      echo "Applying commit $COMMIT..."
      git cherry-pick $COMMIT

      if [ $? -ne 0 ]; then
        echo "Skipped commit $COMMIT due to conflict or policy"
        git cherry-pick --abort
      else
        echo "Successfully applied commit $COMMIT"
      fi
    done


      - name: Push new commits
        run: |
          git push origin feature/new-updates

---


name: Sync Upstream Repository

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *" # –∑–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 03:00

jobs:
  sync:
    runs-on: [self-hosted, linux, corporate-runner]

    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/rosetta-models/blank-base-model || true
          git fetch upstream

      - name: Prepare local branch
        run: |
          git checkout feature/new-updates || git checkout -b feature/new-updates origin/feature/new-updates || git checkout -b feature/new-updates

      - name: Cherry-pick new commits from upstream
        run: |
          set -e

          # –°–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö –∫–æ–º–º–∏—Ç–æ–≤ –≤ –∞–ø—Å—Ç—Ä–∏–º–µ
          NEW_COMMITS=$(git log --reverse --format="%H" feature/new-updates..upstream/main || true)

          if [ -z "$NEW_COMMITS" ]; then
            echo "‚úÖ No new commits to sync"
            exit 0
          fi

          echo "Found new commits:"
          echo "$NEW_COMMITS"

          # –†–µ–≥—É–ª—è—Ä–∫–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤
          SECRET_PATTERNS="(hooks.slack.com|ghp_[A-Za-z0-9]{36}|AKIA[0-9A-Z]{16}|-----BEGIN( RSA)? PRIVATE KEY-----|xox[baprs]-[0-9A-Za-z-]+|eyJ[A-Za-z0-9_-]*\.[A-Za-z0-9._-]*\.[A-Za-z0-9._-]*)"

          for commit in $NEW_COMMITS; do
            echo "üîç Checking commit $commit..."
            DIFF=$(git show $commit)

            if echo "$DIFF" | grep -Eq "$SECRET_PATTERNS"; then
              echo "‚ö†Ô∏è Skipping commit $commit (possible secret found)"
              continue
            fi

            echo "‚û°Ô∏è Applying commit $commit"
            if ! git cherry-pick $commit; then
              echo "‚ö†Ô∏è Cherry-pick failed for $commit, skipping..."
              git cherry-pick --abort || true
            fi
          done

      - name: Push updates
        run: |
          git push origin feature/new-updates || echo "‚ö†Ô∏è Nothing to push"

